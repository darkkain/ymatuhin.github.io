<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Юрий Матюхин</title>
    <description></description>
    <author>Юрий Матюхин</author>
    <link>http://ymatuhin.ru/</link>
    <atom:link href="http://ymatuhin.ru/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 17 May 2015 18:13:26 +0300</pubDate>
    <lastBuildDate>Sun, 17 May 2015 18:13:26 +0300</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Разбираемся со сборкой front end на Gulp (часть 1)</title>
        <description>&lt;p&gt;В последнее время &lt;strong&gt;Gulp&lt;/strong&gt; набирает большую популярность, и понятно почему. Он быстрее, красивее и проще чем &lt;strong&gt;Grunt&lt;/strong&gt;. Мне приходилось часто с ним работать, но я всегда брал готовые решения и не до конца понимал как же он все это делает. На этих выходных я решил разобрать и закрыть эту небольшую проблему. Об этом и поговорим сегодня.&lt;/p&gt;

&lt;img class=&quot;rounded bordered&quot; src=&quot;/img/gulp/logo.png&quot; alt=&quot;Gulp логотип / gulp logo&quot;&gt;

&lt;h2&gt;&lt;a id=&quot;what_is&quot; href=&quot;#what_is&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Что такое Gulp?&lt;/h2&gt;

&lt;p&gt;Gulp — это инструмент сборки front-a. Он позволяет автоматизировать повторяющиеся задачи (сборка и минификация CSS- и JS-файлов, запуск тестов, перезагрузка браузера и другие). Тем самым Gulp ускоряет и оптимизирует процесс веб-разработки.&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;install&quot; href=&quot;#install&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Установка Gulp&lt;/h2&gt;
&lt;p&gt;Установить Gulp достаточно легко. Если у вас что-то не получится, пишите в комментариях или загуглите вашу проблему. Итак для установки нужно сделать 3 шага:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Установить Gulp глобально;&lt;/li&gt;
&lt;li&gt;Установить Gulp как &lt;code&gt;devDependencies&lt;/code&gt; (зависимости для разработки);&lt;/li&gt;
&lt;li&gt;Создать файл &lt;code&gt;gulpfile.js&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Первый шаг — устанавливаем глобально Gulp. Открываем терминал и пишем:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm install --global gulp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;После этого вам нужно установить Gulp как &lt;code&gt;devDependencies&lt;/code&gt; для вашего проекта. Убедитесь в том, что у вас есть файл &lt;code&gt;package.json&lt;/code&gt;. Если его нет, то создайте его написав в консоль &lt;code&gt;npm init&lt;/code&gt;. Теперь можно установить Gulp как &lt;code&gt;devDependencies&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm install --save-dev gulp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И наконец, вам нужно создать &lt;code&gt;gulpfile.js&lt;/code&gt; в корне вашего проекта, который будет содержать ваши задачи (tasks). В качестве промежуточного шага, мы установим плагин &lt;code&gt;gulp-util&lt;/code&gt;. Чтобы показать как устанавливаются плагины:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm install --save-dev gulp-util&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Теперь настало время написать нашу первую задачку. Открываем только что созданный файл &lt;code&gt;gulpfile.js&lt;/code&gt; и пишем в него следующее:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* File: gulpfile.js */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// собираем все наши плагины&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;gutil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;gulp-util&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// создаем задачку, которая будет выполняться по умолчанию&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gutil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Gulp is running!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И теперь нам остается запустить gulp в терминале и мы увидим нечто похожее на это:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;gt; gulp
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12:32:08&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Using gulpfile ~/Projects/gulp-scotch-io/gulpfile.js
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12:32:08&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Starting &lt;span class=&quot;s1&quot;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12:32:08&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Gulp is running!
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;12:32:08&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Finished &lt;span class=&quot;s1&quot;&gt;&amp;#39;default&amp;#39;&lt;/span&gt; after &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; ms&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;&lt;a id=&quot;overview&quot; href=&quot;#overview&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Обзор&lt;/h2&gt;
&lt;p&gt;Сам по себе Gulp очень скуден на возможности. Но все, что вам нужно вынесено в отдельные плагины. Они совместно с Gulp творят чудеса.&lt;/p&gt;

&lt;p&gt;Api у gulp очень маленькое, и содержит всего 4 функции высшего порядка:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gulp.task&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp.src&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp.dest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp.watch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;gulp.task&lt;/code&gt; определяет наши задачи. В качестве аргументов принимает название, зависимости (массив) и функцию (основные действия). Зависимостей может и не быть:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mytask&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//сделать что-то&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;dependenttask&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mytask&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//сделать что-то после того, как &amp;#39;mytask&amp;#39; будет выполнен&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;gulp.src&lt;/code&gt; указывает на файлы, которые мы хотим использовать. Он использует &lt;code&gt;.pipe&lt;/code&gt; доступа к файлам через плагины.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gulp.dest&lt;/code&gt; указывает на папку, в которую мы хотим сохранить измененные файлы.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gulp.src&lt;/code&gt; и &lt;code&gt;gulp.dest&lt;/code&gt; используется для простой копии файлов:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;copyHtml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// скопировать все html файлы из source/ в public/&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;source/*.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;public&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;В gulp встроена система реагирования на изменения файлов (&lt;code&gt;gulp.watch&lt;/code&gt;). Вы можете использовать эту задачу для запуска других необходимых вам задач при изменении файлов.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;source/**/*.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;copyHtml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Этот пример будет выполнять задачу &lt;code&gt;copyHtml&lt;/code&gt; когда любой html файл в папке source изменится.&lt;/p&gt;

&lt;p&gt;В следующей статье мы разберемся подробнее о задачах, синхронность и асинхронностью и напишем что-нибудь полезное.&lt;/p&gt;
</description>
        <pubDate>Sun, 17 May 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/see_into_gulp</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/see_into_gulp</guid>
        
        <category>gulp</category>
        
        <category>frontend</category>
        
        <category>сборка</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Вопросы для собеседования кандидату на должность Front-end разработчика</title>
        <description>&lt;p&gt;&lt;em&gt;Это перевод популярного репозитория от html5bp — &lt;a href=&quot;//h5bp.github.io/Front-end-Developer-Interview-Questions/&quot;&gt;Front-end Job Interview Questions&lt;/a&gt; (en),  который существует с 2009 года. Список вопросов составлялся и дополнятся известными во front-end людьми, поэтому на этот список можно положиться. Перевод делал не я (вернее я хотел, но он оказался уже переведен).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/front_end_interview/mem.jpg&quot; class=&quot;rounded bordered&quot; alt=&quot;&quot; /&gt;
&lt;strong&gt;Замечание:&lt;/strong&gt; Этот репозиторий содержит подборку вопросов, которые могут быть использованы на собеседованиях на должность front-end разработчика. Здесь предлагаются лишь идеи, не нужно задавать все вопросы сразу (иначе в один час точно не уложитесь).&lt;/p&gt;

&lt;p&gt;Также, имейте в виду, что многие вопросы не требуют однозначного короткого ответа, а лишь помогают завести беседу на ту или иную тему (предоставляя кандидату возможность показать себя во всей красе).&lt;/p&gt;

&lt;h2 id=&quot;a-idtoc-hreftoc-classshort-linka-&quot;&gt;&lt;a id=&quot;toc&quot; href=&quot;#toc&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Содержание&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#general&quot;&gt;Общие вопросы&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#html&quot;&gt;Вопросы по HTML&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#js&quot;&gt;Вопросы по JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jscode&quot;&gt;Примеры кода на JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jquery&quot;&gt;Вопросы по jQuery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#css&quot;&gt;Вопросы по CSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#fun&quot;&gt;“Светская беседа«&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contributors&quot;&gt;Первоначальные авторы&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;a-idgeneral-hrefgeneral-classshort-linka---toc&quot;&gt;&lt;a id=&quot;general&quot; href=&quot;#general&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Общие вопросы: &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Вы пользуетесь Твиттером?
    &lt;ul&gt;
      &lt;li&gt;Если да, то кто присутствует в вашей ленте?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Кого из мировых front-end разработчиков вы знаете?
    &lt;ul&gt;
      &lt;li&gt;А российских front-end’щиков?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;У Вас есть аккаунт на GitHub?
    &lt;ul&gt;
      &lt;li&gt;Если да, то за какими интересными проектами вы следите?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Какие блоги Вы читаете?&lt;/li&gt;
  &lt;li&gt;Какие системы управления версиями вам приходилось использовать?&lt;/li&gt;
  &lt;li&gt;Расскажите о своей среде разработки (ОС, редактор, браузер(ы), прочие инструменты)&lt;/li&gt;
  &lt;li&gt;Опишите последовательность Ваших действий, когда вы создаете новую Web-страницу&lt;/li&gt;
  &lt;li&gt;Можете ли пояснить разницу между progressive enhancement и graceful degradation?
    &lt;ul&gt;
      &lt;li&gt;Бонус, если также расскажете про feature detection (определение возможностей браузера)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Объясните, что означает «Семантическая разметка»&lt;/li&gt;
  &lt;li&gt;Какой Ваш основной браузер для разработки и какими инструментами Вы в нем пользуетесь?&lt;/li&gt;
  &lt;li&gt;Как можно оптимизировать загрузку внешних ресурсов на странице?
    &lt;ul&gt;
      &lt;li&gt;Комбинация из потенциальных решений:
        &lt;ul&gt;
          &lt;li&gt;Конкатенация&lt;/li&gt;
          &lt;li&gt;Минификация&lt;/li&gt;
          &lt;li&gt;Использование CDN&lt;/li&gt;
          &lt;li&gt;Кэширования&lt;/li&gt;
          &lt;li&gt;и т.д.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Каково преимущество в подгрузке внешних ресурсов с нескольких доменов?
    &lt;ul&gt;
      &lt;li&gt;Сколько ресурсов браузер может одновременно качать с одного домена?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Назовите три способа уменьшения времени загрузки страницы (воспринимаемого или реального)&lt;/li&gt;
  &lt;li&gt;Если Вы присоединились к проекту, где для форматирования используются табы, а Вы привыкли использовать пробелы, как Вы поступите?
    &lt;ul&gt;
      &lt;li&gt;Предложите использовать EditorConfig (&lt;a href=&quot;//editorconfig.org&quot;&gt;editorconfig.org&lt;/a&gt;)&lt;/li&gt;
      &lt;li&gt;Останетесь верным своим привычкам&lt;/li&gt;
      &lt;li&gt;Выполните команду &lt;code&gt;:retab!&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Используете ли приёмы для ускорения написания кода (сниппеты, Emmet)?&lt;/li&gt;
  &lt;li&gt;Знакомы ли с шаблонизаторами (Smarty, HAML etc.)&lt;/li&gt;
  &lt;li&gt;Реализуйте примитивное слайд-шоу
    &lt;ul&gt;
      &lt;li&gt;Бонус, если Вы это сделаете без использования JS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Какие инструменты Вы используете для тестирования производительности кода?
    &lt;ul&gt;
      &lt;li&gt;JSPerf (&lt;a href=&quot;//jsperf.com/&quot;&gt;jsperf.com&lt;/a&gt;)&lt;/li&gt;
      &lt;li&gt;Dromaeo (&lt;a href=&quot;//dromaeo.com/&quot;&gt;dromaeo.com&lt;/a&gt;)&lt;/li&gt;
      &lt;li&gt;и т.д.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Если бы у Вас была возможность освоить новую технологию в этом году, что бы это было?&lt;/li&gt;
  &lt;li&gt;Объясните важность стандартов и комитетов по стандартам&lt;/li&gt;
  &lt;li&gt;Что такое FOUC (Flash Of Unstyled Content)? Как его избежать?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-idhtml-hrefhtml-classshort-linka--html-toc&quot;&gt;&lt;a id=&quot;html&quot; href=&quot;#html&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Вопросы по HTML: &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Для чего нужен &lt;code&gt;doctype&lt;/code&gt; и сколько разновидностей Вы можете назвать?&lt;/li&gt;
  &lt;li&gt;В чем разница между standards mode и quirks mode?&lt;/li&gt;
  &lt;li&gt;Какие ограничения накладывают стандарты XHTML?
    &lt;ul&gt;
      &lt;li&gt;Могут ли возникнуть проблемы при подаче страниц с типом &lt;code&gt;application/xhtml+xml&lt;/code&gt;?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Как следует оформлять страницу, в которой контент может быть на разных языках?
    &lt;ul&gt;
      &lt;li&gt;Что нужно иметь в виду при разработке многоязычных сайтов?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Можно ли использовать синтаксис XHTML в HTML5?&lt;/li&gt;
  &lt;li&gt;Как использовать XML в HTML5?&lt;/li&gt;
  &lt;li&gt;Чем полезны &lt;code&gt;data-&lt;/code&gt; атрибуты?&lt;/li&gt;
  &lt;li&gt;Какие box-модели есть в HTML4 и есть ли отличия в HTML5?&lt;/li&gt;
  &lt;li&gt;Если рассматривать HTML5 как открытую web-платформу, на чем она строится, из каких компонентов состоит?&lt;/li&gt;
  &lt;li&gt;Объясните разницу между cookies, sessionStorage и localStorage.&lt;/li&gt;
  &lt;li&gt;Знакомы ли с подводными камнями вёрстки почтовых шаблонов?&lt;/li&gt;
  &lt;li&gt;Какая разница между &lt;code&gt;GET&lt;/code&gt; и &lt;code&gt;POST&lt;/code&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-idjs-hrefjs-classshort-linka--javascript-toc&quot;&gt;&lt;a id=&quot;js&quot; href=&quot;#js&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Вопросы по JavaScript: &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Какими js-библиотеками Вы пользовались?&lt;/li&gt;
  &lt;li&gt;Вы когда-нибудь заглядывали в исходный код библиотек/фреймворков, которыми пользовались?&lt;/li&gt;
  &lt;li&gt;Чем JavaScript отличается от Java?&lt;/li&gt;
  &lt;li&gt;Что-такое хэш-таблица?&lt;/li&gt;
  &lt;li&gt;Что такое &lt;code&gt;неопределенные (undefined)&lt;/code&gt; и &lt;code&gt;необъявленные (undeclared)&lt;/code&gt; переменные?&lt;/li&gt;
  &lt;li&gt;Что такое замыкание и как/для чего его используют?
    &lt;ul&gt;
      &lt;li&gt;Как вы предпочитаете их использовать?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Где обычно используются анонимные функции?&lt;/li&gt;
  &lt;li&gt;Объясните «JavaScript module pattern» и где он (паттерн) применяется
    &lt;ul&gt;
      &lt;li&gt;Бонус, если упомянута чистота глобального пространства имен&lt;/li&gt;
      &lt;li&gt;Что, если Ваш модуль не заключен в пространство имен?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Как Вы организуете свой код? (module pattern, наследование)&lt;/li&gt;
  &lt;li&gt;В чем разница между host-объектами и нативными объектами?&lt;/li&gt;
  &lt;li&gt;В чем разница между последними двумя строчками:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;В чем разница между &lt;code&gt;.call&lt;/code&gt; и &lt;code&gt;.apply&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;Что делает и для чего нужна функция &lt;code&gt;Function.prototype.bind&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;Когда Вы оптимизируете свой код?&lt;/li&gt;
  &lt;li&gt;Объясните, как работает наследование в JavaScript?&lt;/li&gt;
  &lt;li&gt;Где до сих пор используется &lt;code&gt;document.write()&lt;/code&gt;?
    &lt;ul&gt;
      &lt;li&gt;В большинстве генерируемых баннеров, хотя так делать не рекомендуется&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;В чем разница между feature detection (определение возможностей браузера), feature inference (предположение возможностей) и анализом строки user-agent?&lt;/li&gt;
  &lt;li&gt;Расскажите об AJAX как можно более подробно&lt;/li&gt;
  &lt;li&gt;Объясните, как работает JSONP (и почему это не настоящий AJAX)&lt;/li&gt;
  &lt;li&gt;Вы когда-нибудь использовали шаблонизацию на JavaScript?
    &lt;ul&gt;
      &lt;li&gt;Если да, какие библиотеки использовали? (Mustache.js, Handlebars etc.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Объясните, что такое «hoisting»&lt;/li&gt;
  &lt;li&gt;Объясните event bubbling&lt;/li&gt;
  &lt;li&gt;В чем разница между «атрибутом» (attribute) и «свойством» (property)?&lt;/li&gt;
  &lt;li&gt;Почему &lt;em&gt;не следует&lt;/em&gt; расширять нативные JavaScript объекты?&lt;/li&gt;
  &lt;li&gt;Почему &lt;em&gt;следует&lt;/em&gt; расширять нативные JavaScript объекты?&lt;/li&gt;
  &lt;li&gt;В чем разница между событиями &lt;code&gt;document load&lt;/code&gt; и &lt;code&gt;document ready&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;В чем разница между &lt;code&gt;==&lt;/code&gt; и &lt;code&gt;===&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;Как получить параметры из URL’а текущего окна?&lt;/li&gt;
  &lt;li&gt;Объясните &lt;code&gt;same-origin policy&lt;/code&gt; в контексте JavaScript&lt;/li&gt;
  &lt;li&gt;Объясните &lt;code&gt;event delegation&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Какие Вы знаете паттерны организации наследования в JavaScript?&lt;/li&gt;
  &lt;li&gt;Сделайте так, чтобы этот код работал:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;duplicator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1,2,3,4,5,1,2,3,4,5]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Опишите принцип мемоизации (избежание повторных вычислений) в JavaScript&lt;/li&gt;
  &lt;li&gt;Почему тернарный оператор так называется?&lt;/li&gt;
  &lt;li&gt;Что такое арность функции?&lt;/li&gt;
  &lt;li&gt;Что делает строчка &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt;? Какие достоинства и недостатки от её использования?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-idjscode-hrefjscode-classshort-linka----javascript-toc&quot;&gt;&lt;a id=&quot;jscode&quot; href=&quot;#jscode&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Примеры кода на JavaScript &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;~~&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.14&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вопрос: Какое значение возвращает данное предложение?
&lt;strong&gt;Ответ: 3&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;i&amp;#39;m a lasagna hog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вопрос: Какое значение возвращает данное предложение?
&lt;strong&gt;Ответ: «goh angasal a m’i»&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вопрос: Чему равно window.foo?
&lt;strong&gt;Ответ: «bar»&lt;/strong&gt;,
только если выражение window.foo было ложным, иначе переменная сохранит своё изначальное значение&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вопрос: Что покажут эти два alert?
&lt;strong&gt;Ответ: «Hello World» и ReferenceError: bar is not defined&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вопрос: Чему равно foo.length?
&lt;strong&gt;Ответ: &lt;code&gt;2&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вопрос: Чему равно foo.length?
&lt;strong&gt;Ответ: &lt;code&gt;undefined&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;a-idjquery-hrefjquery-classshort-linka--jquery-toc&quot;&gt;&lt;a id=&quot;jquery&quot; href=&quot;#jquery&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Вопросы по jQuery: &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Объясните «chaining».&lt;/li&gt;
  &lt;li&gt;Объясните «deferreds».&lt;/li&gt;
  &lt;li&gt;Какие Вы знаете приемы оптимизации кода, использующего jQuery?&lt;/li&gt;
  &lt;li&gt;Что делает &lt;code&gt;.end()&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;Как добавить пространство имён к обработчику событий? Для чего это нужно?&lt;/li&gt;
  &lt;li&gt;Назовите 4 разных вида аргументов, которые принимает функция jQuery()?
    &lt;ul&gt;
      &lt;li&gt;Селектор (строка), HTML (строка), Callback (функция), HTMLElement, объект, массив, массив элементов, объект jQuery etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Что такое очередь эффектов (fx queue)?&lt;/li&gt;
  &lt;li&gt;В чем разница между &lt;code&gt;.get()&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, и &lt;code&gt;.eq()&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;В чем разница между &lt;code&gt;.bind()&lt;/code&gt;, &lt;code&gt;.live()&lt;/code&gt;, и &lt;code&gt;.delegate()&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;В чем разница между &lt;code&gt;$&lt;/code&gt; и &lt;code&gt;$.fn&lt;/code&gt;? Что вообще такое &lt;code&gt;$.fn&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;Оптимизируйте данный селектор:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.foo div#bar:eq(0)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;a-idcss-hrefcss-classshort-linka--css-toc&quot;&gt;&lt;a id=&quot;css&quot; href=&quot;#css&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Вопросы по CSS: &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Что такое «reset» CSS и для чего он нужен?&lt;/li&gt;
  &lt;li&gt;Объясните, что такое плавающие элементы (floats) и как они работают?&lt;/li&gt;
  &lt;li&gt;Какие вы знаете методы запрета обтекания (clearing) и какие где применяются?&lt;/li&gt;
  &lt;li&gt;Что такое CSS спрайты? Как они реализуются на странице или сайте?&lt;/li&gt;
  &lt;li&gt;Какие Ваши любимые методы подмены текста картинкой (image replacement) и когда Вы их используете?&lt;/li&gt;
  &lt;li&gt;CSS property hacks, conditionally included .css files…&lt;/li&gt;
  &lt;li&gt;Как Вы обеспечиваете отображение страниц в старых/ограниченных браузерах?
    &lt;ul&gt;
      &lt;li&gt;Какие приёмы/процессы Вы при этом используете?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Какими способами можно визуально скрыть элемент (оставив его доступным для экранного диктора, screen reader)?&lt;/li&gt;
  &lt;li&gt;Вы когда-нибудь использовали сеточную верстку (grid system, grid design)? Если да, какая Ваша любимая?&lt;/li&gt;
  &lt;li&gt;Приходилось ли вам использовать или реализовывать media queries или верстку под мобильные устройства?&lt;/li&gt;
  &lt;li&gt;Приходилось ли вам стилизовать SVG?&lt;/li&gt;
  &lt;li&gt;Как оптимизировать страницы для печати?&lt;/li&gt;
  &lt;li&gt;Какие есть подводные камни в оптимизации производительности CSS?&lt;/li&gt;
  &lt;li&gt;Вы используете CSS препроцессоры? (SASS, Compass, Bourbon, Stylus, LESS)
    &lt;ul&gt;
      &lt;li&gt;Если да, расскажите, что вам в них нравится и не нравится?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Как Вы сверстаете макет, который использует нестандартные шрифты?
    &lt;ul&gt;
      &lt;li&gt;Webfonts (сервисы вроде Google Webfonts, Typekit, Fontsquirrel etc.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Объясните, как браузер определяет, на какие элементы накладывать CSS стили?&lt;/li&gt;
  &lt;li&gt;Приходилось ли сталкиваться с Retina-дисплеями?&lt;/li&gt;
  &lt;li&gt;Слышали ли о системе БЭМ (Блок-Элемент-Модификатор)?
    &lt;ul&gt;
      &lt;li&gt;Если да, то в чем её суть? Расскажите о системе нотификации селекторов.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-idfun-hreffun-classshort-linka---toc&quot;&gt;&lt;a id=&quot;fun&quot; href=&quot;#fun&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; «Светская беседа»: &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Самое крутое, что Вы когда либо делали и чем гордитесь?&lt;/li&gt;
  &lt;li&gt;Вы знаете секретный жест HTML5-банды?&lt;/li&gt;
  &lt;li&gt;(&lt;a href=&quot;https://vimeo.com/18848658&quot;&gt;непереводимый юмор&lt;/a&gt;) Are you now, or have you ever been, on a boat.&lt;/li&gt;
  &lt;li&gt;Что Вы больше всего любите в Ваших инструментах разработки?&lt;/li&gt;
  &lt;li&gt;У Вас есть какие-нибудь личные проекты?&lt;/li&gt;
  &lt;li&gt;Возьмите листок бумаги и напишите в столбик буквы A B C D E. Теперь отсортируйте столбик в алфавитном порядке по убыванию, не написав ни строчки кода.
    &lt;ul&gt;
      &lt;li&gt;Засеките, через сколько времени кандидат перевернет листок&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Пират или ниндзя?
    &lt;ul&gt;
      &lt;li&gt;Бонус за комбинацию. Аргументированную. +2 за зомби-пират-ниндзя-обезьяну&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Чем бы Вы занимались, если бы не Web-разработкой?&lt;/li&gt;
  &lt;li&gt;Какая Ваша любимая «фишка» Internet Explorer?&lt;/li&gt;
  &lt;li&gt;Закончите предложение: Brendan Eich и Doug Crockford являются &lt;strong&gt;__&lt;/strong&gt;&lt;em&gt;__&lt;/em&gt; языка JavaScript.&lt;/li&gt;
  &lt;li&gt;jQuery: хорошая библиотека или великая библиотека? Тема для дискуссии…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;a-idcontributors-hrefcontributors-classshort-linka---toc&quot;&gt;&lt;a id=&quot;contributors&quot; href=&quot;#contributors&quot; class=&quot;short-link&quot;&gt;#&lt;/a&gt; Первоначальные авторы &lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;@bentruyman (bentruyman.com)&lt;/li&gt;
  &lt;li&gt;@cowboy (benalman.com)&lt;/li&gt;
  &lt;li&gt;@roger_raymond (twitter.com/iansym)&lt;/li&gt;
  &lt;li&gt;@ajpiano (ajpiano.com)&lt;/li&gt;
  &lt;li&gt;@paul_irish (paulirish.com)&lt;/li&gt;
  &lt;li&gt;@SlexAxton (alexsexton.com)&lt;/li&gt;
  &lt;li&gt;@boazsender (boazsender.com)&lt;/li&gt;
  &lt;li&gt;@miketaylr (miketaylr.com)&lt;/li&gt;
  &lt;li&gt;@vladikoff (vladfilippov.com)&lt;/li&gt;
  &lt;li&gt;@gf3 (gf3.ca)&lt;/li&gt;
  &lt;li&gt;@jon_neal (twitter.com/jon_neal)&lt;/li&gt;
  &lt;li&gt;@wookiehangover (wookiehangover.com)&lt;/li&gt;
  &lt;li&gt;@darcy_clarke (darcyclarke.me)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 15 May 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/front_end_developer_interview_quersions</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/front_end_developer_interview_quersions</guid>
        
        <category>frontend</category>
        
        <category>работа</category>
        
        <category>вопросы</category>
        
        <category>перевод</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Быстрый дебаг CSS слоев с Pesticide</title>
        <description>&lt;p style=&quot;margin-top: 0&quot;&gt;Как часто у вас бывали проблемы со схлопыванием плавающих элементов? Или элемент уезжал непонятно куда? Эти и другое проблемы, связанные с позиционированием элементов на странице решает маленькая CSS/SASS/LESS библиотека — &lt;strong&gt;Pesticide&lt;/strong&gt;.&lt;/p&gt;

&lt;img class=&quot;rounded bordered&quot; src=&quot;/img/pesticide/logo.png&quot; alt=&quot;Логотип CSS библиотеки — Pesticide&quot;&gt;

&lt;p&gt;Что делает этот ваш Pesticide? На официальном сайте: «Kill your CSS layout bugs. Without 2000 clicks in Chrome Dev Tools». На самом деле принцип её работы очень прост, и я думаю многие разработчики писали у себя в стилях во время разработки нечто вроде этого:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;outline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Но Адам Морс (Adam Morse) пошел дальше, и добавил свой цвет для каждого элемента. И теперь, если немного привыкнуть, то по цвету можно определять цвет элемента и его область. &lt;/p&gt;

&lt;p&gt;Сам CSS файл до смешного прост, познакомиться подробнее с Pesticide можно на официальном сайте &lt;a href=&quot;//pesticide.io&quot;&gt;pesticide.io&lt;/a&gt;. Посмотреть исходники и скачать файл можно с &lt;a href=&quot;https://github.com/mrmrs/pesticide&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;img class=&quot;rounded bordered&quot; src=&quot;/img/pesticide/github.png&quot; alt=&quot;Pesticide на Github&quot;&gt;
&lt;img class=&quot;rounded bordered&quot; src=&quot;/img/pesticide/ya.png&quot; alt=&quot;Pesticide на  Yandex&quot;&gt;

&lt;p&gt;Мне кажется, что подключать эту библиотеку как css файл на свой проект не рационально. Особенно когда у неё есть расширения для браузеров (&lt;a href=&quot;https://chrome.google.com/webstore/detail/bblbgcheenepgnnajgfpiicnbbdmmooh&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/pesticide/&quot;&gt;Firefox&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;Но с расширениями есть одна проблема — они сбрасывается при перезагрузке страницы. В таком случае нам придется обязательно подключать pesticide как css файл чтобы избежать этого.&lt;/p&gt;

&lt;p&gt;Я предложил Адаму исправить это положение вещей в расширении для хрома, но он не поддержал меня и решил не включать мои изменения в расширение. Поэтому было решено опубликовать еще одну версию этого расширения для хрома только без необходимости каждый раз нажимать на кнопку, чтобы увидеть библиотеку в действии. Так и появился &lt;a href=&quot;https://chrome.google.com/webstore/detail/pesticide-for-chrome-with/eipbgplchlidkojmppclhkechkhmlefi&quot;&gt;Pesticide for Chrome with autoupdate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Какое расширение будете использовать вы — дело исключительно ваше. Но я думаю, не мне одному будет удобна моя модификация.&lt;/p&gt;

&lt;p&gt;Красивой CSS разметки вам вместе с Pesticide :)&lt;/p&gt;
</description>
        <pubDate>Tue, 12 May 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/faster_debug_css_layout_with_pesticide</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/faster_debug_css_layout_with_pesticide</guid>
        
        <category>css</category>
        
        <category>pesticide</category>
        
        <category>debug</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Крутые вебинары от Geekbrains (Школа Программирования)</title>
        <description>&lt;img style=&quot;margin-top: 10px;&quot; class=&quot;rounded bordered&quot; src=&quot;/img/geekbrains/logo.png&quot; alt=&quot;Логотип Geekbrains&quot;&gt;

&lt;p style=&quot;margin-top: 0&quot;&gt;Хочу поделиться с вами хорошими вебинарами от Geekbrains (Школа Программирования). Я совсем недавно нашел этот сайт и эти вебинары, поэтому успел посмотреть только несколько записей. Но общее впечатление очень хорошее. Хотя тут все зависит от того, кто ведет эти вебинары.&lt;/p&gt;

&lt;p&gt;Многие вебинары доступны на &lt;a href=&quot;//youtube.com/user/progliveru/videos&quot;&gt;Youtube канале&lt;/a&gt; школы программирования, но не все. Остальные видео можно найти на сайте &lt;a href=&quot;http://geekbrains.ru/events&quot;&gt;Geekbrains&lt;/a&gt;. Но чтобы их просмотреть, нужно там зарегистрироваться (они будут присылать вам раз в несколько дней письма про курсы и т.д.).&lt;/p&gt;

&lt;p&gt;Приведу несколько вебинаров которые мне понравились:&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/GGmbRM0Khvo&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p class=&quot;media-title&quot;&gt;Вопросы личностного развития. Часть 1. Эффективная постановка личных целей&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/MufNlCv8o5Y&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p class=&quot;media-title&quot;&gt;Карьера в ИТ: Путь джедая&lt;/p&gt;
</description>
        <pubDate>Thu, 07 May 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/all/cool_webinars_on_geekbrains</link>
        <guid isPermaLink="true">http://ymatuhin.ru/all/cool_webinars_on_geekbrains</guid>
        
        <category>вебинар</category>
        
        <category>школа программирования</category>
        
        
        <category>all</category>
        
      </item>
    
      <item>
        <title>Стилизуем инструменты разработчика (dev tools) в Google Chrome</title>
        <description>&lt;p&gt;Совсем недавно я узнал, что Chrome поддерживает темы для dev tools. Мне сразу-же захотелось попробовать это. Сразу скажу результат меня не совсем порадовал :-)&lt;/p&gt;

&lt;h2&gt;Подготовка&lt;/h2&gt;
&lt;p&gt;Для того, чтобы установить тему для dev tools, нужно включить экспериментальные функции. Чтобы это сделать введите в адресной строке Google Chrome &lt;code&gt;chrome://flags/#enable-devtools-experiments&lt;/code&gt;. Рядом с пунктом &lt;em&gt;Enable Developer Tools experiments&lt;/em&gt; нажмите &lt;em&gt;Enable&lt;/em&gt;. Теперь перезапустите браузер (внизу должна быть кнопка).&lt;/p&gt;

&lt;img class=&quot;rounded&quot; src=&quot;/img/dev_tools/flags.png&quot; alt=&quot;Google Chrome Flags&quot;&gt;

&lt;p&gt;Откройте инструменты разработчика (cmd+shif+i / F12), зайдите в настройки (иконка шестеренки), перейдите во вкладку &lt;strong&gt;Experiments&lt;/strong&gt; и поставьте галочку рядом с пунктом «Allow custom UI themes».&lt;/p&gt;
&lt;p&gt;Теперь можно спокойно устанавливать темы из магазина.&lt;/p&gt;

&lt;h2&gt;Поиск и установка тем&lt;/h2&gt;
&lt;p&gt;Найти темы можно в магазине &lt;a href=&quot;https://chrome.google.com/webstore/category/extensions&quot;&gt;Google Chrome&lt;/a&gt;. Искать по запросу dev themes. Но это не очень удобно, почти все темы собраны на сайте &lt;a href=&quot;http://devthemez.com/themes/chrome-developer-tools&quot;&gt;devthemez.com&lt;/a&gt;. И там-же есть темы для dev tools.&lt;/p&gt;

&lt;p&gt;Теперь переходим в магазин, выбираем нужную нам тему и устанавливаем её. Теперь при открытии инструментов разработчика вы увидите вашу тему.&lt;/p&gt;

&lt;img class=&quot;rounded&quot; src=&quot;/img/dev_tools/dev_tools.png&quot; alt=&quot;Google Chrome styled dev tools&quot;&gt;

&lt;p&gt;Теперь немного о неприятном. Темы очень часто выглядят убого. Еще есть проблема с привыканием. К примеру, я привык, что если в консоли цифра синяя — это Number, а если красная — String. Но в каждой теме свои цвета, и становится сложнее в них ориентироваться.&lt;/p&gt;

&lt;p&gt;Сейчас я не буду переходить на стилизованные dev tools. Однако если будет крутая, темная тема от Atom то я бы посмотрел на это.&lt;/p&gt;
</description>
        <pubDate>Wed, 06 May 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/styling_chrome_dev_tools</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/styling_chrome_dev_tools</guid>
        
        <category>Google</category>
        
        <category>dev tools</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Автоматическая генерация файла .gitignore</title>
        <description>&lt;p&gt;Каждый раз писать свой gitignore немного напряжно. Особенно когда ты что-то забываешь и ненужные файлы вываливаются в общий репозиторий. Но уже все придумано за нас, нам осталось только вписать наши технологии и редакторы в нужное поле и скачать получившийся файл.&lt;/p&gt;

&lt;p&gt;Все это позволяет сделать онлайн сервис — &lt;a href=&quot;//gitignore.io/&quot;&gt;gitignore.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;rounded&quot; src=&quot;/img/git/gitignore.png&quot; alt=&quot;Главная страница сайта gitignore.io&quot;&gt;&lt;/p&gt;

&lt;p&gt;Не забывайте вписать ваш редактор в поле (особенно если это IDE), т.к. он часто создает скрытые папки для сохранения своих настроек.&lt;/p&gt;

&lt;p&gt;В последнем проекте на nodejs у меня было написано &lt;code&gt;osx, webstorm, node, sublime&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Так-же есть возможность использовать через командную строку. Подробнее об этом можно почитать в &lt;a href=&quot;//www.gitignore.io/docs&quot;&gt;документации&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/auto_generate_gitignore</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/auto_generate_gitignore</guid>
        
        <category>git</category>
        
        <category>gitignore</category>
        
        <category>сервисы</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Хорошие ресурсы для изучающих Git на русском языке</title>
        <description>&lt;p&gt;&lt;/p&gt;
&lt;img class=&quot;rounded noshadow&quot; src=&quot;/img/git/git_guide.png&quot; alt=&quot;Git - the simple guide. Простое руководство по работе с git.&quot;&gt;

&lt;p&gt;Руководств по Git на английском языке великое множество, но на русском на порядок меньше. Я, конечно, согласен с тем, что нужно учить английский и читать в оригинале, но у меня с этим есть небольшие проблемы. И если есть возможность найти эту-же информацию на русском языке, то для меня выбор очевиден.&lt;/p&gt;

&lt;p&gt;Я выбрал три хороших ресурса для изучающих Git на русском языке, которыми хочу поделиться с вами:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.ru.html&quot;&gt;Git the simple guide&lt;/a&gt; — простое руководство по работе с git. &lt;br&gt; Но для кого-то этого материала может не хватить, поскольку там описано все очень кратко и только основные моменты.
    &lt;li&gt;&lt;a href=&quot;//git-scm.com/book/ru/v1&quot;&gt;Pro Git&lt;/a&gt; — исчерпывающая книга по Git, которую можно купить на Амазоне или читать онлайн / скачать бесплатно.&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;//githowto.com/ru&quot;&gt;Git How To&lt;/a&gt; — это интерактивный тур, который познакомит вас с основами Git. Тур создан с пониманием того, что лучшим способом научиться чему-нибудь — сделать это своими руками.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Очень понравился ресурс &lt;em&gt;Git the simple guide&lt;/em&gt; и &lt;em&gt;Git How To&lt;/em&gt;. У меня уже был опыт работы с Git, но только через GUI. Поэтому первый ресурс мне очень подошел.&lt;/p&gt;

&lt;p&gt;Кстати если вас не привлекает работа через терминал, то в конце &lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.ru.html&quot;&gt;&lt;em&gt;Git the simple guide&lt;/em&gt;&lt;/a&gt; есть полезные ссылки с программами для работы c Git через графические интерфейсы (GUI) и несколько руководств.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 May 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/good_resources_for_learning_git</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/good_resources_for_learning_git</guid>
        
        <category>git</category>
        
        <category>tutorials</category>
        
        <category>ресурсы</category>
        
        <category>книги</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Исключаем папки из обычного и Fuzzy поиска в Atom</title>
        <description>&lt;p&gt;Порой, чтобы открыть нужный файл, нужно знать все его название. А все из-за того, что у нас очень много файлов в папках &lt;code&gt;node_modules&lt;/code&gt; и &lt;code&gt;bower_components&lt;/code&gt; и они мешают открытию написанных нами файлов.&lt;/p&gt;

&lt;p&gt;Решается эта &lt;em&gt;проблема&lt;/em&gt; достаточно легко. Заходим в настройки Config (Atom → Open Your Config). Ищем там строку &lt;code&gt;core&lt;/code&gt; и дописываем туда &lt;code&gt;ignoredNames&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
core:
  ignoredNames: [
    &quot;node_modules&quot;
    &quot;bower_components&quot;
    &quot;.tmp&quot;
  ]
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Теперь все файлы внутри этих папок исключены из поиска обычного и Fuzzy. И нужные нам файлы легко будет найти.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Apr 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/atom_exclude_foilder</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/atom_exclude_foilder</guid>
        
        <category>Atom</category>
        
        <category>fuzzy</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Учим Emmet под Atom работать со Stylus</title>
        <description>&lt;p&gt;&lt;/p&gt;
&lt;img class=&quot;rounded noshadow&quot; src=&quot;/img/atom/atom_stylus_emmet.jpg&quot; alt=&quot;Мои дополнения к текстовому редактору Atom&quot;&gt;

&lt;p&gt;Расширение &lt;strong&gt;Emmet&lt;/strong&gt; отлично работает с html, css, sass, scss, less. Но есть одна проблема — &lt;em&gt;Stylus&lt;/em&gt;. Видимо из-за того, что этот препроцессор не так распространен то в Emmet официально нет его поддержки. То есть наши правила на подобии &lt;code&gt;bd+&lt;/code&gt; не раскрываются.&lt;/p&gt;

&lt;p&gt;Несмотря на то, что в дополнении Stylus уже идут многие сниппеты похожие на Emmet, но не все. А переучиваться не хочется, ведь Emmet более распространен среди текстовых редакторов. Значит нужно что-то придумать для этого.&lt;/p&gt;

&lt;p&gt;Решение нашлось очень простое, выглядит как небольшой костыль, но оно полностью рабочее. Основной смысл в том, чтобы принудительно вызывать Emmet при нажатии на Tab в файлах Stylus.&lt;/p&gt;

&lt;p&gt;Заходим в настройки Keymap (Atom → Open Your Keymap). И в самом низу дописываем следующие строки:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;
&lt;pre&gt;
&#39;atom-text-editor[data-grammar~=&quot;stylus&quot;]:not([mini])&#39;:
    &#39;tab&#39;: &#39;emmet:expand-abbreviation-with-tab&#39;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Теперь все работает хорошо.&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Apr 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/atom_emmet_with_stylus</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/atom_emmet_with_stylus</guid>
        
        <category>Atom</category>
        
        <category>emmet</category>
        
        <category>stylus</category>
        
        <category>дополнения</category>
        
        
        <category>front-end</category>
        
      </item>
    
      <item>
        <title>Мои дополнения к текстовому редактору Atom</title>
        <description>&lt;p&gt;&lt;/p&gt;
&lt;img class=&quot;rounded&quot; src=&quot;/img/atom/atom_packages.jpg&quot; alt=&quot;Мои дополнения к текстовому редактору Atom&quot;&gt;

&lt;p&gt;Вчера я писал про текстовый редактор Atom (&lt;a href=&quot;/front-end/still_using_sublime_text_then_we_go_to_you/&quot;&gt;Все еще сидите на Sublime Text? Тогда мы идем к вам!&lt;/a&gt;), а сегодня хочу продолжить о нем разговор и рассказать о моих дополнениях к нему.&lt;/p&gt;

&lt;h2&gt;Список установленных дополнений/расширений&lt;/h2&gt;
&lt;p&gt;В скобочках общее количество установок.&lt;/p&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;b&gt;linter&lt;/b&gt; (~262 000)
        &lt;br&gt; + coffeelint, jshint, stylint, tidy
        &lt;br&gt;Проверка кода на ошибки (coffeescript, js, stylus, html)
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;stylus&lt;/b&gt; (~12 000)
        &lt;br&gt;Добавляет кучу снипетов для stylus
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;atom-beautify&lt;/b&gt; (~148 000)
        &lt;br&gt;Форматирует ваш код (есть куча настроек)
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;autocomplete-plus&lt;/b&gt; (~290 000)
        &lt;br&gt;Добавляет окошко автодополнения (по умолчанию выбор варианта стоит на
        &lt;code&gt;Tab&lt;/code&gt;, но в настройках можно поставить и
        &lt;code&gt;Enter&lt;/code&gt;)
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;color-picker&lt;/b&gt; (~205 000)
        &lt;br&gt;Тут думаю все понятно, добавляет окошко для выбора цвета
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;easy-motion&lt;/b&gt; (~1 100)
        &lt;br&gt;При нажатии на
        &lt;code&gt;cmd+shift+e&lt;/code&gt; все первые буквы слов заменяются, и вам нужно набрать их чтобы перейти к началу этого слова. Так-же есть комбинация для перехода в конец слова. Как это происходит:
        &lt;img class=&quot;rounded&quot; src=&quot;/img/atom/atom_easy-motion.gif&quot; alt=&quot;Дополнение easy-motion к текстовому редактору Atom&quot;&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;emmet&lt;/b&gt; (~115 000)
        &lt;br&gt;Думаю не нуждается в представлении :-)
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;file-icons&lt;/b&gt; (~113 000)
        &lt;br&gt;Заменяет стандартные иконки в боковом меню на красивые и под каждый тип файлов
        &lt;img class=&quot;rounded&quot; src=&quot;/img/atom/atom_file-icons.jpg&quot; alt=&quot;Дополнение file-icons к текстовому редактору Atom&quot;&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;jekyll&lt;/b&gt; (~1 500)
        &lt;br&gt;Добавляет снипеты для работы с jekyll и некоторые функции (но я редко им пользуюсь, думаю удалить)
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;angularjs&lt;/b&gt; (~26 000)
        &lt;br&gt;Добавляет снипеты для angularjs в html и js
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;project-manager&lt;/b&gt; (~78 000)
        &lt;br&gt;Менеджер пакетов практически такой-же как в Sublime
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;merge-conflicts&lt;/b&gt; (~72 000)
        &lt;br&gt;Пока не пользовался, но судя по названию помогает мержить конфликты (КЭП?)
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;minimap&lt;/b&gt; (~260 000)
        &lt;br&gt;Мини карта файла, как и в Sublime Text
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;open-in-browser&lt;/b&gt; (~5 000)
        &lt;br&gt;Добавляет команду для открытия файла в браузере
        &lt;br&gt;
        &lt;br&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;b&gt;project-palette-finder&lt;/b&gt; (~5 000)
        &lt;br&gt;Ищет использованные цвета в проекте и показывает их в отдельном окне
        &lt;img class=&quot;rounded&quot; src=&quot;/img/atom/atom_palette_finder.jpg&quot; alt=&quot;Дополнение project-palette-finder к текстовому редактору Atom&quot;&gt;
    &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Если вы очень скучаете по этому чудесному окошку в Sublime Text, которое выскакивает на каждое 20е сохранение, то для Atom есть дополнение для этого — &lt;a href=&quot;https://github.com/thiagopnts/unregistered&quot;&gt;unregistered&lt;/a&gt;.&lt;/p&gt;
&lt;img class=&quot;rounded&quot; src=&quot;/img/atom/atom_unregistered.jpg&quot; alt=&quot;Дополнение unregistered к текстовому редактору Atom&quot;&gt;
&lt;/li&gt;

&lt;p&gt;А какие дополнения/расширения используете вы? Напишите об этом в комментариях.&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Apr 2015 00:00:00 +0300</pubDate>
        <link>http://ymatuhin.ru/front-end/my_atom_packages</link>
        <guid isPermaLink="true">http://ymatuhin.ru/front-end/my_atom_packages</guid>
        
        <category>Atom</category>
        
        <category>дополнения</category>
        
        <category>текстовый редактор</category>
        
        
        <category>front-end</category>
        
      </item>
    
  </channel>
</rss>
